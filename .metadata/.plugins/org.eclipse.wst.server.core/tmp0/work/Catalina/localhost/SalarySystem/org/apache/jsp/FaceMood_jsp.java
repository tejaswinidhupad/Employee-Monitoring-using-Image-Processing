/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.8
 * Generated at: 2017-02-18 11:26:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import java.io.File;

public final class FaceMood_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.File");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\r\n");
      out.write("<title>Emotion Based Music Player</title>\r\n");
      out.write("\r\n");
      out.write("<meta\r\n");
      out.write("\tcontent='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0'\r\n");
      out.write("\tname='viewport' />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\" />\r\n");
      out.write("\r\n");
      out.write("<link href=\"css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"css/gsdk-base.css\" rel=\"stylesheet\" />\r\n");
      out.write("\r\n");
      out.write("<link href=\"css/font-awesome.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"js/jquery-1.10.2.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"js/bootstrap.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\r\n");
      out.write("<!--   plugins \t -->\r\n");
      out.write("<script src=\"js/jquery.bootstrap.wizard.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"js/wizard.js\"></script>\r\n");
      out.write("<link href=\"css/3.0/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<script src=\"js/3.0/bootstrap.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/main.min.css\">\r\n");
      out.write("\r\n");
      out.write("<script src=\"resources/js/jaudio.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction getUrlVars() {\r\n");
      out.write("\t\tvar vars = {};\r\n");
      out.write("\t\tvar parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi,\r\n");
      out.write("\t\t\t\tfunction(m, key, value) {\r\n");
      out.write("\t\t\t\t\tvars[key] = value;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\treturn vars;\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tvar count = 0;\r\n");
      out.write("\tvar target = document.getElementById('targetID');\r\n");
      out.write("\tvar ws = new WebSocket(\"ws://127.0.0.1:9999\");\r\n");
      out.write("\tws.onopen = function() {\r\n");
      out.write("\t\tconsole.log(\"Openened connection to websocket\");\r\n");
      out.write("\t};\r\n");
      out.write("\tvar previousStatus = \"\";\r\n");
      out.write("\tvar countTime = false;\r\n");
      out.write("\tws.onmessage = function(msg) {\r\n");
      out.write("\t\tvar target = document.getElementById(\"target\");\r\n");
      out.write("\t\tconsole.log('String message received: ' + msg.data);\r\n");
      out.write("\t\tif (typeof msg.data === \"string\") {\r\n");
      out.write("\t\t\tvar str = msg.data;\r\n");
      out.write("\t\t\tdocument.getElementById('Knownstatus2').innerHTML = \" \" + str;\r\n");
      out.write("\t\t\tif (str === \"true\") {\r\n");
      out.write("\t\t\t\tonStartTimer();\r\n");
      out.write("\t\t\t\tcountTime = true;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tif (!countTime && str === \"false\") {\r\n");
      out.write("\t\t\t\t\tonStopTimer();\r\n");
      out.write("\t\t\t\t\tcountTime = false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tconsole.log('String message received: ' + msg.data);\r\n");
      out.write("\t\t} else if (msg.data instanceof ArrayBuffer) {\r\n");
      out.write("\t\t\turl = window.URL.createObjectURL(msg.data);\r\n");
      out.write("\t\t\ttarget.onload = function() {\r\n");
      out.write("\t\t\t\twindow.URL.revokeObjectURL(url);\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\ttarget.src = url;\r\n");
      out.write("\t\t\t//console.log('ArrayBuffer received: ' + msg.data);\r\n");
      out.write("\t\t} else if (msg.data instanceof Blob) {\r\n");
      out.write("\t\t\turl = window.URL.createObjectURL(msg.data);\r\n");
      out.write("\t\t\ttarget.onload = function() {\r\n");
      out.write("\t\t\t\twindow.URL.revokeObjectURL(url);\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\ttarget.src = url;\r\n");
      out.write("\t\t\t//console.log('Blob received: ' + msg.data);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\t// Put event listeners into place\r\n");
      out.write("\twindow\r\n");
      out.write("\t\t\t.addEventListener(\r\n");
      out.write("\t\t\t\t\t\"DOMContentLoaded\",\r\n");
      out.write("\t\t\t\t\tfunction() {\r\n");
      out.write("\t\t\t\t\t\t// Grab elements, create settings, etc.\r\n");
      out.write("\t\t\t\t\t\tvar canvas = document.getElementById(\"canvas\"), context = canvas\r\n");
      out.write("\t\t\t\t\t\t\t\t.getContext(\"2d\"), video = document\r\n");
      out.write("\t\t\t\t\t\t\t\t.getElementById(\"video\"), videoObj = {\r\n");
      out.write("\t\t\t\t\t\t\t\"video\" : true\r\n");
      out.write("\t\t\t\t\t\t}, errBack = function(error) {\r\n");
      out.write("\t\t\t\t\t\t\tconsole.log(\"Video capture error: \", error.code);\r\n");
      out.write("\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t// Put video listeners into place\r\n");
      out.write("\t\t\t\t\t\tif (navigator.getUserMedia) { // Standard\r\n");
      out.write("\t\t\t\t\t\t\tnavigator.getUserMedia(videoObj, function(stream) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvideo.src = stream;\r\n");
      out.write("\t\t\t\t\t\t\t\tvideo.play();\r\n");
      out.write("\t\t\t\t\t\t\t\ttimecapture();\r\n");
      out.write("\t\t\t\t\t\t\t}, errBack);\r\n");
      out.write("\t\t\t\t\t\t} else if (navigator.webkitGetUserMedia) { // WebKit-prefixed\r\n");
      out.write("\t\t\t\t\t\t\tnavigator.webkitGetUserMedia(videoObj, function(\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstream) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvideo.src = window.URL.createObjectURL(stream);\r\n");
      out.write("\t\t\t\t\t\t\t\tvideo.play();\r\n");
      out.write("\t\t\t\t\t\t\t\ttimecapture();\r\n");
      out.write("\t\t\t\t\t\t\t}, errBack);\r\n");
      out.write("\t\t\t\t\t\t} else if (navigator.mozGetUserMedia) { // WebKit-prefixed\r\n");
      out.write("\t\t\t\t\t\t\tnavigator.mozGetUserMedia(videoObj,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfunction(stream) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvideo.src = window.URL\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t.createObjectURL(stream);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvideo.play();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttimecapture();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}, errBack);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tfunction timecapture() {\r\n");
      out.write("\t\t\t\t\t\t\ttimer = setInterval(function() {\r\n");
      out.write("\t\t\t\t\t\t\t\tcontext.drawImage(video, 0, 0, canvas.width,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcanvas.height);\r\n");
      out.write("\t\t\t\t\t\t\t\tvar data = canvas.toDataURL();\r\n");
      out.write("\t\t\t\t\t\t\t\tnewblob = dataURItoBlob(data);\r\n");
      out.write("\t\t\t\t\t\t\t\tws.send(newblob);\r\n");
      out.write("\t\t\t\t\t\t\t}, 250);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t;\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\tfunction dataURItoBlob(dataURI) {\r\n");
      out.write("\t\t// convert base64/URLEncoded data component to raw binary data held in a string\r\n");
      out.write("\t\tvar byteString;\r\n");
      out.write("\t\tif (dataURI.split(',')[0].indexOf('base64') >= 0)\r\n");
      out.write("\t\t\tbyteString = atob(dataURI.split(',')[1]);\r\n");
      out.write("\t\telse\r\n");
      out.write("\t\t\tbyteString = unescape(dataURI.split(',')[1]);\r\n");
      out.write("\t\t// write the bytes of the string to a typed array\r\n");
      out.write("\t\tvar ia = new Uint8Array(byteString.length);\r\n");
      out.write("\t\tfor (var i = 0; i < byteString.length; i++) {\r\n");
      out.write("\t\t\tia[i] = byteString.charCodeAt(i);\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\treturn new Blob([ ia ], {\r\n");
      out.write("\t\t\ttype : \"image/png\"\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t/* \t setInterval(\r\n");
      out.write("\t\r\n");
      out.write("\t function addToDatabase()\r\n");
      out.write("\t {\r\n");
      out.write("\t var request;  \r\n");
      out.write("\t var val=document.getElementById(\"hoursNext\").innerHTML+\":\"+\r\n");
      out.write("\t document.getElementById(\"minutesNext\").innerHTML+\":\"+\r\n");
      out.write("\t document.getElementById(\"secondsNext\").innerHTML;\r\n");
      out.write("\t alert(\" Total Time away From work : \" + val);\r\n");
      out.write("\t //window.location=\"\";            \t\t\r\n");
      out.write("\t\r\n");
      out.write("\t if(window.XMLHttpRequest){  \r\n");
      out.write("\t request=new XMLHttpRequest();  \r\n");
      out.write("\t }  \r\n");
      out.write("\t else if(window.ActiveXObject){  \r\n");
      out.write("\t request=new ActiveXObject(\"Microsoft.XMLHTTP\");  \r\n");
      out.write("\t }  \r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t request.onreadystatechange=function gotoLogin(){  \r\n");
      out.write("\t if(request.readyState==4){  \r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t window.location=\"Login.jsp\";\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t }\r\n");
      out.write("\t };   \r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t request.open(\"GET\",\"LogoutServlet?val=\"+val,true);  \r\n");
      out.write("\t request.send();  \r\n");
      out.write("\t\r\n");
      out.write("\t }  ,5000); */\r\n");
      out.write("\t/*// $(document).ready(function() {\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t var val = document.getElementById(\"hoursNext\").innerHTML + \":\"\r\n");
      out.write("\t + document.getElementById(\"minutesNext\").innerHTML + \":\"\r\n");
      out.write("\t + document.getElementById(\"secondsNext\").innerHTML;\r\n");
      out.write("\t alert(\"ygjgj\");\r\n");
      out.write("\t $.ajax({\r\n");
      out.write("\t\r\n");
      out.write("\t url : 'WasteHoursServlet1',\r\n");
      out.write("\t type : 'GET',\r\n");
      out.write("\t data : {\r\n");
      out.write("\t val : val\r\n");
      out.write("\t },\r\n");
      out.write("\t dataType : 'json',\r\n");
      out.write("\t error : function() {\r\n");
      out.write("\t alert(\"dcsadsa33333333333333333333ajbmbmnb\");\r\n");
      out.write("\t },\r\n");
      out.write("\t\r\n");
      out.write("\t success : function(data) {\r\n");
      out.write("\t alert(\"dcsadsaajbmbmnb\");\r\n");
      out.write("\t },\r\n");
      out.write("\t });\r\n");
      out.write("\r\n");
      out.write("\t }); */\r\n");
      out.write("\t \r\n");
      out.write("\t  \r\n");
      out.write("\tsetInterval(\r\n");
      out.write("\r\n");
      out.write("\tfunction addToDatabase() {\r\n");
      out.write("\t\tvar request;\r\n");
      out.write("\t\tvar val = document.getElementById(\"hoursNext\").innerHTML + \":\"\r\n");
      out.write("\t\t\t\t+ document.getElementById(\"minutesNext\").innerHTML + \":\"\r\n");
      out.write("\t\t\t\t+ document.getElementById(\"secondsNext\").innerHTML;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t//alert(\" Total Time away From work : \" + val);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t//window.location=\"\";            \t\t\r\n");
      out.write("\r\n");
      out.write("\t\tif (window.XMLHttpRequest) {\r\n");
      out.write("\t\t\trequest = new XMLHttpRequest();\r\n");
      out.write("\t\t} else if (window.ActiveXObject) {\r\n");
      out.write("\t\t\trequest = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\trequest.onreadystatechange = function gotoLogin() {\r\n");
      out.write("\t\t\tif (request.readyState == 4) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\twindow.location = \"FaceMood.jsp\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\trequest.open(\"GET\", \"WasteHoursServlet1?val=\" + val, true);\r\n");
      out.write("\t\trequest.send();\r\n");
      out.write("\r\n");
      out.write("\t}, 150000);\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body style=\"background-color: ffffff\" onload=\"setAllarm()\">\r\n");
      out.write("\r\n");
      out.write("\t<nav class=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\">\r\n");
      out.write("\t\t<!-- Brand and toggle get grouped for better mobile display -->\r\n");
      out.write("\t\t<div class=\"navbar-header\">\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\"\r\n");
      out.write("\t\t\t\tdata-target=\".navbar-ex1-collapse\">\r\n");
      out.write("\t\t\t\t<span class=\"sr-only\">Toggle navigation</span> <span\r\n");
      out.write("\t\t\t\t\tclass=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span\r\n");
      out.write("\t\t\t\t\tclass=\"icon-bar\"></span>\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t\t<a class=\"navbar-brand\" href=\"home.htm\">Salary System</a>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Top Menu Items -->\r\n");
      out.write("\t\t<ul class=\"nav navbar-right top-nav\"></ul>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"collapse navbar-collapse navbar-ex1-collapse\">\r\n");
      out.write("\t\t\t\t<ul class=\"nav navbar-nav side-nav\"></ul>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<li class=\"sideM\"><a href=\"LogoutServlet\"><i\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"fa fa-fw fa-sign-out\"></i> Log Out</a></li>\r\n");
      out.write("\t</nav>\r\n");
      out.write("\t<div class=\"image-container set-full-height\"\r\n");
      out.write("\t\tstyle=\"background-image: url('')\">\r\n");
      out.write("\t\t<!--   Big container   -->\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t\t <div class=\"wizard-container\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"card wizard-card ct-wizard-orange  \" id=\"wizard\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"wizard-header\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<h3>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<b>");
      out.print(session.getAttribute("tt"));
      out.write("</b><br> <small>Work\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tis worship.. So let's do it positively</small>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</h3>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li><div style=\"color: grey;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<a href=\"#userfsc\" data-toggle=\"tab\">Eye Detection system</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t <div class=\"tab-content\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"tab-pane\" id=\"userfsc\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-12\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-12 col-sm-offset-4\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td width=\"200\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"well well-sm\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"height: 260px; width: 340px\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<video id=\"video\" width=\"320\" height=\"240\" autoplay\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thidden></video>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<canvas id=\"canvas\" width=\"320\" height=\"240\" hidden></canvas>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"\" alt=\"\" id=\"target\" width=\"320\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight=\"240\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><label id=\"Knownstatus\" class=\"panel-title\">Biometric\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStatus: </label> <label id=\"Knownstatus2\" class=\"panel-title\"></label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"hoursNext\" style=\"top: 0em;\">00</span><span>:</span><span\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"minutesNext\" style=\"top: -1em;\">50</span><span>:</span><span\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"secondsNext\" style=\"top: 0em;\">00</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</div> \r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/pomodoro-timer.js\" type=\"text/javascript\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
