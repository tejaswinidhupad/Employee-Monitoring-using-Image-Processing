/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.8
 * Generated at: 2017-02-18 11:29:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import com.database.DatabaseConnection;

public final class employeeOffDeskLeaves_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.database.DatabaseConnection");
    _jspx_imports_classes.add("java.sql.ResultSet");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Employee Leaves</title>\r\n");
      out.write("<!-- Bootstrap Core CSS -->\r\n");
      out.write("<link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"jquery-1.11.3.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"bootstrap.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"bootstrap-datepicker.js\"></script>\r\n");
      out.write("<!-- Custom CSS -->\r\n");
      out.write("<link href=\"css/sb-admin.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- Custom Fonts -->\r\n");
      out.write("<link href=\"font-awesome/css/font-awesome.min.css\" rel=\"stylesheet\"\r\n");
      out.write("\ttype=\"text/css\">\r\n");
      out.write("<script>\r\n");
      out.write("\t    $(document).ready(function(){\r\n");
      out.write("/* \t        $(\".sideM\").removeClass('active');\r\n");
      out.write("\t        $(\".itemM\").addClass('active');\r\n");
      out.write("\t        getHotelItemList(); */\r\n");
      out.write("\t    \t$('.datepicker').datepicker({\r\n");
      out.write("\t    \t\tformat : 'dd-mm-yyyy',\r\n");
      out.write("\t             autoclose:true\r\n");
      out.write("\t     \t});\r\n");
      out.write("\t    });\r\n");
      out.write("\t    \r\n");
      out.write("\t    function leaveResponse(lid,leaveRes){\r\n");
      out.write("\t    \tvar date = $(\".dt-\"+lid).text();\r\n");
      out.write("\t    \tvar eid = $(\".eid-\"+lid).text();\r\n");
      out.write("\t    \tvar wh = $(\".wh-\"+lid).text();\r\n");
      out.write("\r\n");
      out.write("\t    \t$.ajax({\r\n");
      out.write("    \t\t   url: 'LeaveApproveservlet',\r\n");
      out.write("    \t\t   data: {lid:lid,leaveRes:leaveRes,date:date,eid:eid,wh:wh},\r\n");
      out.write("    \t\t   type: 'POST',\r\n");
      out.write("    \t\t   dataType: 'json',\r\n");
      out.write("    \t\t   error: function() {\r\n");
      out.write("    \t\t      $('#info').html('<p>An error has occurred</p>');\r\n");
      out.write("    \t\t   },\r\n");
      out.write("    \t\t   success: function(data) {\r\n");
      out.write("    \t\t\t   var result=data.Result;\r\n");
      out.write("     \t\t\t   alert(\"result :: \"+result);\r\n");
      out.write("     \t\t\t   $(\".status-\"+lid).html(result);\r\n");
      out.write("    \t\t   },\r\n");
      out.write("    \t\t});\r\n");
      out.write("\t    }\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"wrapper\">\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Header.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t<div id=\"page-wrapper\">\r\n");
      out.write("\t\t\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t\t\t<form class=\"form-horizontal\" method=\"post\"\r\n");
      out.write("\t\t\t\t\taction=\"addHotelItem.htm\">\r\n");
      out.write("\t\t\t\t\t<!-- <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t    <label class=\"col-sm-2 control-label\">Select Date</label>\r\n");
      out.write("\t\t\t\t    <div class=\"col-sm-4\">\r\n");
      out.write("\t\t\t\t      <input class=\"form-control datepicker\" type=\"text\" name=\"date\">\r\n");
      out.write("\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t    <div class=\"col-sm-4\">\r\n");
      out.write("\t\t\t      \t\t<button type=\"submit\" class=\"btn btn-success\">Submit</button>\r\n");
      out.write("\t\t\t    \t</div>\r\n");
      out.write("\t\t\t  \t</div> -->\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t<hr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<table class=\"table table-bordered\" id=\"table\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t<tr class=\"text-danger\">\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"8\" class=\"text-center h3\">Employees leave\r\n");
      out.write("\t\t\t\t\t\t\t\trequests</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>EMP ID</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>EMP NAME</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>POSITION</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>DATE</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>Reason</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>Leave hours</th>\r\n");
      out.write("\t\t\t\t\t\t <th>Status</th>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<th>Action</th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t<tbody id=\"tb\">\r\n");
      out.write("\t\t\t\t\t\t");

							DatabaseConnection db = new DatabaseConnection();
							ResultSet rs = db
									.selectQuery("select off_desk_request.*,employee.name,employee.position from off_desk_request,employee where off_desk_request.status='"
											+ "pending"
											+ "' and employee.eid=off_desk_request.eid");
							
							
							try{
								
							
							while (rs.next()) {
								if (rs.getString("status").equals("pending")) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td  class=\"eid-");
      out.print(rs.getInt("id"));
      out.write('"');
      out.write('>');
      out.print(rs.getInt("eid"));
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(rs.getString("name"));
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(rs.getString("position"));
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"dt-");
      out.print(rs.getInt("id"));
      out.write('"');
      out.write('>');
      out.print(rs.getString("date"));
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(rs.getString("reason"));
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"wh-");
      out.print(rs.getInt("id"));
      out.write('"');
      out.write('>');
      out.print(rs.getString("time"));
      out.write("</td>\r\n");
      out.write("                            <td class=\"status-");
      out.print(rs.getInt("id"));
      out.write("\">pending</td>\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"button\" onclick=\"leaveResponse('");
      out.print(rs.getInt("id"));
      out.write("','1');\" class=\"btn btn-sm btn-success\" value=\"Approve\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"button\" onclick=\"leaveResponse('");
      out.print(rs.getInt("id"));
      out.write("','0');\" class=\"btn btn-sm btn-danger\" value=\"Disapprove\"></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t");

							}
							}
							
							} catch (Exception e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
							finally
							{
								
								if(rs != null)
									try {
										rs.close();
									} catch (Exception e) {
										// TODO Auto-generated catch block
										e.printStackTrace();
									}
								
								db.closeConnection();
								
								
							}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
