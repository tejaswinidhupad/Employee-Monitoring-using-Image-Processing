/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.8
 * Generated at: 2017-03-28 09:40:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<script src=\"jquery-1.8.2.js\"></script>\r\n");
      out.write("    <script src=\"mfs100-9.0.2.6.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <script src=\"jquery-1.8.2.js\"></script>\r\n");
      out.write("    <script src=\"mfs100-9.0.2.6.js\"></script>\r\n");
      out.write("    <script language=\"javascript\" type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        var quality = 60; //(1 to 100) (recommanded minimum 55)\r\n");
      out.write("        var timeout = 10; // seconds (minimum=10(recommanded), maximum=60, unlimited=0 )\r\n");
      out.write("\r\n");
      out.write("        function GetInfo() {\r\n");
      out.write("          \r\n");
      out.write("\r\n");
      out.write("            var key = document.getElementById('txtKey').value;\r\n");
      out.write("\r\n");
      out.write("            var res;\r\n");
      out.write("            if (key.length == 0) {\r\n");
      out.write("                res = GetMFS100Info();\r\n");
      out.write("            }\r\n");
      out.write("            else {\r\n");
      out.write("                res = GetMFS100KeyInfo(key);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            if (res.httpStaus) {\r\n");
      out.write("\r\n");
      out.write("                document.getElementById('txtStatus').value = \"ErrorCode: \" + res.data.ErrorCode + \" ErrorDescription: \" + res.data.ErrorDescription;\r\n");
      out.write("\r\n");
      out.write("                if (res.data.ErrorCode == \"0\") {\r\n");
      out.write("                 \r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            else {\r\n");
      out.write("                alert(res.err);\r\n");
      out.write("            }\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function Capture() {\r\n");
      out.write("            try {\r\n");
      out.write("                document.getElementById('txtStatus').value = \"\";\r\n");
      out.write("                  \r\n");
      out.write("                document.getElementById('txtIsoTemplate').value = \"\"; \r\n");
      out.write("\r\n");
      out.write("                var res = CaptureFinger(quality, timeout);\r\n");
      out.write("                if (res.httpStaus) {\r\n");
      out.write("\r\n");
      out.write("                    document.getElementById('txtStatus').value = \"ErrorCode: \" + res.data.ErrorCode + \" ErrorDescription: \" + res.data.ErrorDescription;\r\n");
      out.write("\r\n");
      out.write("                    if (res.data.ErrorCode == \"0\") {\r\n");
      out.write("                         document.getElementById('txtIsoTemplate').value = res.data.IsoTemplate;\r\n");
      out.write("                        \r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("                else {\r\n");
      out.write("                    alert(res.err);\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            catch (e) {\r\n");
      out.write("                alert(e);\r\n");
      out.write("            }\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        function Match() {\r\n");
      out.write("            try {\r\n");
      out.write("                var isotemplate = document.getElementById('txtIsoTemplate').value;\r\n");
      out.write("                var res = MatchFinger(quality, timeout, isotemplate);\r\n");
      out.write("\r\n");
      out.write("                if (res.httpStaus) {\r\n");
      out.write("                    if (res.data.Status) {\r\n");
      out.write("                        alert(\"Finger matched\");\r\n");
      out.write("                    }\r\n");
      out.write("                    else {\r\n");
      out.write("                        if (res.data.ErrorCode != \"0\") {\r\n");
      out.write("                            alert(res.data.ErrorDescription);\r\n");
      out.write("                        }\r\n");
      out.write("                        else {\r\n");
      out.write("                            alert(\"Finger not matched\");\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("                else {\r\n");
      out.write("                    alert(res.err);\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            catch (e) {\r\n");
      out.write("                alert(e);\r\n");
      out.write("            }\r\n");
      out.write("            return false;\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("      <style>\r\n");
      out.write("input[type=text], select {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 12px 20px;\r\n");
      out.write("    margin: 8px 0;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    border: 1px solid #ccc;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=submit] {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    background-color: #4CAF50;\r\n");
      out.write("    color: white;\r\n");
      out.write("    padding: 14px 20px;\r\n");
      out.write("    margin: 8px 0;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=submit]:hover {\r\n");
      out.write("    background-color: #45a049;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div {\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    background-color: #f2f2f2;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!--<h3>Using CSS to style an HTML Form</h3>-->\r\n");
      out.write("\r\n");
      out.write("<div>\r\n");
      out.write("  \r\n");
      out.write("<form action=\"save\" method=\"POST\">\r\n");
      out.write("    <label for=\"name\">Name</label>\r\n");
      out.write("    <input type=\"text\"  name=\"name\" placeholder=\"\">\r\n");
      out.write("\r\n");
      out.write("    <label for=\"dob\">Year of Birth[_ _ _ _]</label>\r\n");
      out.write("    <input type=\"text\"  name=\"dob\" placeholder=\"\">\r\n");
      out.write("\r\n");
      out.write("\t<label for=\"number\">Aadhhar</label>\r\n");
      out.write("    <input type=\"text\"  name=\"aadhhar\" placeholder=\"\">\r\n");
      out.write("     <input type=\"submit\" value=\"Submit\">\r\n");
      out.write("  </form>\r\n");
      out.write("    <table width=\"100%\">\r\n");
      out.write("    \r\n");
      out.write("            <tr>\r\n");
      out.write("                <td width=\"220px\">\r\n");
      out.write("                    Status:\r\n");
      out.write("                </td>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <input type=\"text\" value=\"\" id=\"txtStatus\" class=\"form-control\" />\r\n");
      out.write("                </td>\r\n");
      out.write("                <td width=\"150px\" height=\"190px\" align=\"center\" class=\"img\">\r\n");
      out.write("                <img id=\"imgFinger\" width=\"145px\" height=\"188px\" alt=\"Finger Image\" />\r\n");
      out.write("                <button  onclick=\"return GetInfo()\">Get Info</button>\r\n");
      out.write("            </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            </table>\r\n");
      out.write("            \r\n");
      out.write("              <textarea id=\"txtIsoTemplate\" style=\"width: 100%; height:200px;\"> </textarea>\r\n");
      out.write("\r\n");
      out.write("    \t<button  onclick=\"return Capture()\">Scan Fingerprint</button>\r\n");
      out.write("  \r\n");
      out.write("   \r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write(" ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
